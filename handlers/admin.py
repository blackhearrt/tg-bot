from aiogram import Router, types
from aiogram.filters import Command
from utils.database import load_admins, save_admins

router = Router()
ADMIN_IDS = load_admins()

@router.message(Command("addadmin"))
async def add_admin(message: types.Message):
    global ADMIN_IDS
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤!")
        return
    
    try:
        new_admin_id = int(message.text.split()[1])
        if new_admin_id in ADMIN_IDS:
            await message.answer("‚úÖ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –≤–∂–µ —î –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")
            return

        ADMIN_IDS.add(new_admin_id)
        save_admins(ADMIN_IDS)
        await message.answer(f"‚úÖ {new_admin_id} –¥–æ–¥–∞–Ω–∏–π.")
    except (IndexError, ValueError):
        await message.answer("‚ùå –í–∫–∞–∂—ñ—Ç—å ID!")

@router.message(Command("removeadmin"))
async def remove_admin(message: types.Message):
    global ADMIN_IDS
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏!")
        return

    try:
        admin_id = int(message.text.split()[1])
        if admin_id not in ADMIN_IDS:
            await message.answer("‚ùå –¶–µ–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ —î –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.")
            return

        ADMIN_IDS.remove(admin_id)
        save_admins(ADMIN_IDS)
        await message.answer(f"‚ùå –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {admin_id} –≤–∏–¥–∞–ª–µ–Ω–∏–π –∑ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤.")
    except (IndexError, ValueError):
        await message.answer("‚ùå –í–∫–∞–∂—ñ—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π ID –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞! –ù–∞–ø—Ä–∏–∫–ª–∞–¥: /removeadmin 123456789")

@router.message(Command("admins"))
async def show_admins(message: types.Message):
    if message.from_user.id not in ADMIN_IDS:
        await message.answer("‚ùå –£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–∞–≤ –¥–ª—è —Ü—ñ—î—ó –∫–æ–º–∞–Ω–¥–∏!")
        return
    
    if not ADMIN_IDS:
        await message.answer("‚Ñπ –°–ø–∏—Å–æ–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤ –ø–æ—Ä–æ–∂–Ω—ñ–π.")
    else:
        admins_list = "\n".join([f"üîπ {admin_id}" for admin_id in ADMIN_IDS])
        await message.answer(f"üìã <b>–°–ø–∏—Å–æ–∫ –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ—Ä—ñ–≤:</b>\n{admins_list}", parse_mode="HTML")
